/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package daw_tarea6;

import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * Clase que se encarga de mostrar y gestionar el panel de GestionMedicaCentro
 * Centro.
 *
 * @author Francisco Castillo Brull
 * @version 18/05/2022
 */
public class GestionMedicaCentro extends javax.swing.JPanel {

    //Atributos
    
    /**
     * Atributo de tipo GestionMedica que guardara el objeto dicho.
     */
    private GestionMedica gestion;

    /**
     * ArrayList de tipo Centro que guardara todos los centros pasados por
     * parametro.
     */
    private ArrayList<Centro> centros;

    /**
     * - tipo: atributo de tipo entero que guarda el tipo de centro con el que se
     * va a trabajar. 
     * - llamada: atrubuto de tipo int que se usa para saber que se
     * llama desde nuevo Centro.
     */
    private int tipo, llamada;

    /**
     * Atributo protegido y estatico que se usara para saber la posicion de un
     * centro en un array.
     */
    protected static int posicion;

    /**
     * Atributo booleano que indica si el centro se va a editar o no.
     */
    private boolean editar;

    //Constructores
    
    public GestionMedicaCentro(GestionMedica gestion, int tipo) {
        this.gestion = gestion;
        this.tipo = tipo;
        centros = gestion.encontrarCentro(tipo);
        initComponents();
        jPanelPedirInf.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPedirInf = new javax.swing.JPanel();
        jLabelNewCentros = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jNumHabitaciones = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jAreaNombre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jAreaDireccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jNumConsultas = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jNumPlantas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnEdtCentro = new javax.swing.JLabel();
        btnSuprCentro = new javax.swing.JLabel();
        btnNewCentro1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1080, 695));
        setPreferredSize(new java.awt.Dimension(1080, 695));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelPedirInf.setBackground(new java.awt.Color(102, 102, 255));
        jPanelPedirInf.setPreferredSize(new java.awt.Dimension(1000, 707));
        jPanelPedirInf.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelNewCentros.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabelNewCentros.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNewCentros.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        if(tipo == 0){
            jLabelNewCentros.setText("Nuevo Hospital");
        }else if(tipo == 1){
            jLabelNewCentros.setText("Nueva Clínica");
        }
        jPanelPedirInf.add(jLabelNewCentros, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 120));

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nº Habitaciones:");
        jPanelPedirInf.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 420, -1, -1));
        if(tipo == 1){
            jLabel5.setVisible(false);
        }

        if(tipo == 1){
            jNumHabitaciones.setVisible(false);
        }
        jNumHabitaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jNumHabitaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNumHabitacionesKeyTyped(evt);
            }
        });
        jPanelPedirInf.add(jNumHabitaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, 400, 30));

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nombre:");
        jPanelPedirInf.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 80, -1));

        jAreaNombre.setToolTipText("");
        jAreaNombre.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jAreaNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaNombreKeyTyped(evt);
            }
        });
        jPanelPedirInf.add(jAreaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 400, 30));

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Dirección:");
        jPanelPedirInf.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, 100, -1));

        jAreaDireccion.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jAreaDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaDireccionKeyTyped(evt);
            }
        });
        jPanelPedirInf.add(jAreaDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 400, 30));

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nº Consultas:");
        jPanelPedirInf.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, 130, -1));

        jNumConsultas.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jNumConsultas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNumConsultasKeyTyped(evt);
            }
        });
        jPanelPedirInf.add(jNumConsultas, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 400, 30));

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nº Plantas:");
        jPanelPedirInf.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, -1));
        if(tipo == 1){
            jLabel9.setVisible(false);
        }

        if(tipo == 1){
            jNumPlantas.setVisible(false);
        }
        jNumPlantas.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jNumPlantas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNumPlantasKeyTyped(evt);
            }
        });
        jPanelPedirInf.add(jNumPlantas, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, 400, 30));

        jLabel11.setFont(new java.awt.Font("Elephant", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Aceptar");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanelPedirInf.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 490, 160, 80));

        btnAceptar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton click.png"))); // NOI18N
        btnAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAceptarMouseClicked(evt);
            }
        });
        jPanelPedirInf.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 490, 180, 80));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGestiones.png"))); // NOI18N
        jPanelPedirInf.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, -14, 1100, 730));

        add(jPanelPedirInf, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 695));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/gancho.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 240, 210));

        jLabel17.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Mostrar y editar datos");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 290, 250, 30));

        jLabel3.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Eliminar Centro");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, 220, 30));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 70, 240, 210));

        jLabel14.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        if(tipo == 0){
            jLabel14.setText("Nuevo Hospital");
        }else if(tipo == 1){
            jLabel14.setText("Nueva Clínica");
        }
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 160, 30));

        btnEdtCentro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEdtCentro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnEdtCentro.setToolTipText("");
        btnEdtCentro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdtCentro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEdtCentroMouseClicked(evt);
            }
        });
        add(btnEdtCentro, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 440, 50, 50));

        btnSuprCentro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSuprCentro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnSuprCentro.setToolTipText("");
        btnSuprCentro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSuprCentro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuprCentroMouseClicked(evt);
            }
        });
        add(btnSuprCentro, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 440, 50, 50));

        btnNewCentro1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNewCentro1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnNewCentro1.setToolTipText("");
        btnNewCentro1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewCentro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewCentro1MouseClicked(evt);
            }
        });
        add(btnNewCentro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, 50, 50));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 70, 240, 440));

        jLabel2.setBackground(new java.awt.Color(153, 153, 255));
        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 240, 440));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bola-de-demolicion.png"))); // NOI18N
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 240, 210));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 240, 440));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGestiones.png"))); // NOI18N
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1100, 730));
    }// </editor-fold>//GEN-END:initComponents
    
    //Funciones

    /**
     * Funcion del boton de crear y editar centro que llama a la funcion validar
     * para asi poder crear o editar el centro o no.
     *
     * @param evt
     */
    private void btnAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptarMouseClicked
        validar(editar);
    }//GEN-LAST:event_btnAceptarMouseClicked

    /**
     * Funcion del boton de suprimir centro que al ser pulsado llama a la
     * funcion nuevaVentana.
     *
     * @param evt
     */
    private void btnSuprCentroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuprCentroMouseClicked
        nuevaVentana(true);
    }//GEN-LAST:event_btnSuprCentroMouseClicked

    /**
     * Funcion del boton nuevo centro, que al ser pulsado, muestra el panel de
     * pedirInf.
     *
     * @param evt
     */
    private void btnNewCentro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewCentro1MouseClicked
        llamada = 0;
        editar = false;
        jPanelPedirInf.setVisible(true);

    }//GEN-LAST:event_btnNewCentro1MouseClicked

    /**
     * Funcion del boton editar centro, que al ser pulsado llama a la funcion
     * nuevaVentana.
     *
     * @param evt
     */
    private void btnEdtCentroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEdtCentroMouseClicked
        editar = true;
        nuevaVentana(false);
    }//GEN-LAST:event_btnEdtCentroMouseClicked

    /**
     * Funcion de AreaNombre que controla que no se introduzcan numeros y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaNombreKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaNombre.getText().length() >= 40) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaNombreKeyTyped

    /**
     * Funcion de AreaDireccion que controla que no se supere un numero de
     * caracteres.
     *
     * @param evt
     */
    private void jAreaDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaDireccionKeyTyped
        char validar = evt.getKeyChar();

        if (jAreaDireccion.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaDireccionKeyTyped

    /**
     * Funcion de NumConsultas que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jNumConsultasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNumConsultasKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jNumConsultas.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_jNumConsultasKeyTyped

    /**
     * Funcion de NumPlantas que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jNumPlantasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNumPlantasKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jNumPlantas.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_jNumPlantasKeyTyped

    /**
     * Funcion de NumHabitaciones que controla que no se introduzcan letras y no
     * se supere un numero de caracteres.
     *
     * @param evt
     */
    private void jNumHabitacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNumHabitacionesKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jNumHabitaciones.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_jNumHabitacionesKeyTyped

    /**
     * Funcion validar que compruba que ningun campo este vacion en crear y
     * editar centro. Controla que los datos sean correctos y no esten
     * repetidos.
     *
     * @param editar booleano que si es true se comprobara sabiendo que es para
     * editar, si es false se considera que se esta creando un nuevo cento.
     */
    private void validar(boolean editar) {
        int consultas, plantas = 0, habitaciones = 0;
        boolean comprobar = true;
        //todo controlar tambien que los campos sean validos
        try {
            if (jAreaNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un nombre valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            } else if (!gestion.validarNombre(jAreaNombre.getText(), true) && editar) {
                JOptionPane.showMessageDialog(this, "El nombre del centro ya esta en uso", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            } else if (!gestion.validarNombre(jAreaNombre.getText(), false) && !editar) {
                JOptionPane.showMessageDialog(this, "El nombre del centro ya esta en uso", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            }
            if (jAreaDireccion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese una direccion valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            } else if (!gestion.validarDireccion(jAreaDireccion.getText(), true) && editar) {
                JOptionPane.showMessageDialog(this, "La direccion ya esta en uso", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            } else if (!gestion.validarDireccion(jAreaDireccion.getText(), false) && !editar) {
                JOptionPane.showMessageDialog(this, "La direccion ya esta en uso", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            }

            consultas = Integer.parseInt(jNumConsultas.getText());
            if (jNumConsultas.getText().isEmpty() && llamada == 0) {
                JOptionPane.showMessageDialog(this, "Ingrese un numero de consultas valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            } else if (consultas < 1 || consultas > 15) {
                JOptionPane.showMessageDialog(this, "El numero de consultas no es valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                comprobar = false;
            }

            if (tipo == 0 && llamada == 0) {
                plantas = Integer.parseInt(jNumPlantas.getText());
                if (jNumPlantas.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese un numero de plantas valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    comprobar = false;
                } else if (plantas < 1 || plantas > 15) {
                    JOptionPane.showMessageDialog(this, "El numero de plantas no es valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    comprobar = false;
                }

                habitaciones = Integer.parseInt(jNumHabitaciones.getText());
                if (jNumHabitaciones.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese un numero de habitaciones valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    comprobar = false;
                } else if (plantas < 1 || plantas > 15) {
                    JOptionPane.showMessageDialog(this, "El numero de habitaciones no es valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    comprobar = false;
                }
            }

            if (comprobar && tipo == 0 && !editar) {
                gestion.nuevoCentro(new Hospital(jAreaNombre.getText(), jAreaDireccion.getText(), consultas, plantas, habitaciones));
                centros = gestion.encontrarCentro(tipo);
                //se quita el visual pero se ve lo que se dejo anteriormente.
                jPanelPedirInf.setVisible(false);
                centros = gestion.encontrarCentro(tipo);
                JOptionPane.showMessageDialog(this, "El Hospital se creo correctamente");
                limpiarCampos();
            } else if (comprobar && tipo == 0 && editar) {
                gestion.getCentrosMedicos().get(posicion).setNombreCentro(jAreaNombre.getText());
                gestion.getCentrosMedicos().get(posicion).setDireccionCentro(jAreaDireccion.getText());
                //se quita el visual pero se ve lo que se dejo anteriormente.
                jNumConsultas.setEditable(true);
                jNumPlantas.setEditable(true);
                jNumHabitaciones.setEditable(true);
                jPanelPedirInf.setVisible(false);
                limpiarCampos();
            }
            if (comprobar && tipo == 1 && !editar) {
                gestion.nuevoCentro(new Clinica(jAreaNombre.getText(), jAreaDireccion.getText(), consultas));
                //se quita el visual pero se ve lo que se dejo anteriormente.
                jPanelPedirInf.setVisible(false);
                centros = gestion.encontrarCentro(tipo);
                JOptionPane.showMessageDialog(this, "La Clínica se creo correctamente");
                limpiarCampos();
            } else if (comprobar && tipo == 1 && editar) {
                gestion.getCentrosMedicos().get(posicion).setNombreCentro(jAreaNombre.getText());
                gestion.getCentrosMedicos().get(posicion).setDireccionCentro(jAreaDireccion.getText());
                //se quita el visual pero se ve lo que se dejo anteriormente.
                jNumConsultas.setEditable(true);
                jNumPlantas.setEditable(true);
                jNumHabitaciones.setEditable(true);
                jPanelPedirInf.setVisible(false);
                limpiarCampos();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Error. El numero debe estar entre 1 y 15.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /**
     * Funcion estatica que aplica la informacion de un centro en los campos del
     * panel JPerdirInf
     *
     * @param centro es el objeto sobre el que se sacara la informacion.
     */
    public static void mostrarInf(Centro centro) {
        String texto = "";
        jLabelNewCentros.setText("Mostrar y editar información");
        jAreaNombre.setText(centro.getNombreCentro());
        jAreaDireccion.setText(centro.getDireccionCentro());
        texto = String.valueOf(centro.limiteConsultas);
        jNumConsultas.setText(texto);
        jNumConsultas.setEditable(false);
        if (centro instanceof Hospital) {
            texto = String.valueOf(((Hospital) centro).plantas);
            jNumPlantas.setText(texto);
            jNumPlantas.setEditable(false);
            texto = String.valueOf(((Hospital) centro).habitacionesPorPlanta);
            jNumHabitaciones.setText(texto);
            jNumHabitaciones.setEditable(false);
        }
    }

    /**
     * Funcion que crea un nuevo frame y le aplica el panel de mostrarCentros.
     *
     * @param eliminar atributo que se usa para saber si el centro se va a
     * eliminar o solo se va a editar.
     */
    private void nuevaVentana(boolean eliminar) {
        JFrame ventana = new JFrame();
        mostrarCentros centro = new mostrarCentros(centros, gestion, eliminar, 0, null);
        ventana.setSize(new Dimension(300, 250));
        ventana.setLocationRelativeTo(null);
        ventana.add(centro);
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * Funcion que limpia todos los campos del panel JPedirInf.
     */
    private void limpiarCampos() {
        if (tipo == 0 && !jLabelNewCentros.getText().equals("Nuevo Hospital")) {
            jLabelNewCentros.setText("Nuevo Hospital");
        } else if (tipo == 1 && !jLabelNewCentros.getText().equals("Nueva Clínica")) {
            jLabelNewCentros.setText("Nueva Clínica");
        }
        jAreaNombre.setText("");
        jAreaDireccion.setText("");
        jNumConsultas.setText("");
        jNumConsultas.setEditable(true);
        jNumPlantas.setText("");
        jNumPlantas.setEditable(true);
        jNumHabitaciones.setText("");
        jNumHabitaciones.setEditable(true);
        /*
        for(Component component : jPanelPedirInf.getComponents()){
            if (component instanceof TextField) {
                    ((TextField) component).setText("");
            }
        }
         */
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAceptar;
    private javax.swing.JLabel btnEdtCentro;
    private javax.swing.JLabel btnNewCentro1;
    private javax.swing.JLabel btnSuprCentro;
    private static javax.swing.JTextField jAreaDireccion;
    private static javax.swing.JTextField jAreaNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JLabel jLabelNewCentros;
    private static javax.swing.JTextField jNumConsultas;
    private static javax.swing.JTextField jNumHabitaciones;
    private static javax.swing.JTextField jNumPlantas;
    protected static javax.swing.JPanel jPanelPedirInf;
    // End of variables declaration//GEN-END:variables
}
