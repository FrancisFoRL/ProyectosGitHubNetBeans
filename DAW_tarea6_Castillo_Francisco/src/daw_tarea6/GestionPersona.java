/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package daw_tarea6;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.TextArea;
import java.awt.TextField;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import libreria.PeticionDatos;
import librerias.Fecha;
import java.util.Collections;

/**
 * Clase que se encarga de mostrar y gestionar el panel de GestionPersona.
 *
 * @author Fraancisco Castillo Brull
 * @version 18/05/2022
 */
public class GestionPersona extends javax.swing.JPanel {

    //Atributos
    /**
     * Atributo protegido y estatico de tipo String que guardara el String de
     * una persona existente.
     */
    protected static String dni = "";

    /**
     * Atributo de tipo Persona que guarda el objeto de la persona existente.
     */
    private Persona persona;

    /**
     * Atributo de tipo GestionMedica que guardara el objeto dicho.
     */
    private GestionMedica gestion;

    /**
     * ArrayList de tipo Centro que guardara todos los centros pasados por
     * parametro.
     */
    private ArrayList<Centro> centros;

    /**
     * Atributo de tipo entero que guarda el tipo de centro con el que se va a
     * trabajar.
     */
    private int tipo;

    /**
     * Atributo booleano que indica si el centro se va a editar o no.
     */
    private boolean editar;

    /**
     * Atributo Fecha que guardara la fecha que se le asigne.
     */
    protected static Fecha fecha = new Fecha();

    //Constructor
    public GestionPersona(GestionMedica gestion, int tipo) {
        this.gestion = gestion;
        this.tipo = tipo;
        centros = gestion.encontrarCentro(2);
        initComponents();
        jPedirInf.setVisible(false);
        jPersonaExiste.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupPuesto = new javax.swing.ButtonGroup();
        jPedirInf = new javax.swing.JPanel();
        jLabelNewPersona = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelEsp = new javax.swing.JLabel();
        jLabelPuesto = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jRadioAdmin = new javax.swing.JRadioButton();
        jRadioMedico = new javax.swing.JRadioButton();
        jComboEspecialidad = new javax.swing.JComboBox<>();
        jAreaAnio = new javax.swing.JTextField();
        jAreaMes = new javax.swing.JTextField();
        jAreaDia = new javax.swing.JTextField();
        jComboGenero = new javax.swing.JComboBox<>();
        jAreaApellido2 = new javax.swing.JTextField();
        jAreaNombre = new javax.swing.JTextField();
        jAreaApellido1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPersonaExiste = new javax.swing.JPanel();
        btnModificarDatos = new javax.swing.JLabel();
        btnAsignarCentro = new javax.swing.JLabel();
        btnDespedir = new javax.swing.JLabel();
        btnAnadirDia = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnNewPersona = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btnMostPers = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        buttonGroupPuesto.add(jRadioMedico);
        buttonGroupPuesto.add(jRadioAdmin);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPedirInf.setMaximumSize(new java.awt.Dimension(1080, 697));
        jPedirInf.setMinimumSize(new java.awt.Dimension(1080, 697));
        jPedirInf.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelNewPersona.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabelNewPersona.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNewPersona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        if(tipo == 1){
            jLabelNewPersona.setText("Nuevo Personal");
        }else if(tipo == 2){
            jLabelNewPersona.setText("Nuevo Paciente");
        }
        jPedirInf.add(jLabelNewPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 120));

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Mes:");
        jPedirInf.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 60, -1));

        jLabelEsp.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabelEsp.setForeground(new java.awt.Color(255, 255, 255));
        jLabelEsp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelEsp.setText("Especialidad:");
        jPedirInf.add(jLabelEsp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 160, -1));

        jLabelPuesto.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabelPuesto.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPuesto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelPuesto.setText("Puesto:");
        jPedirInf.add(jLabelPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 120, -1));

        jLabel11.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Año:");
        jPedirInf.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 300, 80, -1));

        jLabel14.setFont(new java.awt.Font("Elephant", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Aceptar");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPedirInf.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 500, 160, 80));

        btnAceptar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton click.png"))); // NOI18N
        btnAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAceptarMouseClicked(evt);
            }
        });
        jPedirInf.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 500, 180, 80));

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Nombre:");
        jPedirInf.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 90, -1));

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Dia:");
        jPedirInf.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, 120, -1));

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Genero:");
        jPedirInf.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 120, -1));

        jRadioAdmin.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jRadioAdmin.setForeground(new java.awt.Color(255, 255, 255));
        jRadioAdmin.setText("Administrativo");
        jRadioAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioAdminMouseClicked(evt);
            }
        });
        jPedirInf.add(jRadioAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 170, 40));

        jRadioMedico.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jRadioMedico.setForeground(new java.awt.Color(255, 255, 255));
        jRadioMedico.setText("Médico");
        jRadioMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioMedicoMouseClicked(evt);
            }
        });
        jPedirInf.add(jRadioMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 110, 40));
        jPedirInf.add(jComboEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, 190, 30));

        jAreaAnio.setToolTipText("");
        jAreaAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaAnioKeyTyped(evt);
            }
        });
        jPedirInf.add(jAreaAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 290, 70, 30));

        jAreaMes.setToolTipText("");
        jAreaMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaMesKeyTyped(evt);
            }
        });
        jPedirInf.add(jAreaMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 290, 70, 30));

        jAreaDia.setToolTipText("");
        jAreaDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaDiaKeyTyped(evt);
            }
        });
        jPedirInf.add(jAreaDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 70, 30));

        jComboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino", "Sin Definir" }));
        jComboGenero.setSelectedItem(null);
        jPedirInf.add(jComboGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 230, 190, 30));

        jAreaApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaApellido2KeyTyped(evt);
            }
        });
        jPedirInf.add(jAreaApellido2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 170, 190, 30));

        jAreaNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaNombreKeyTyped(evt);
            }
        });
        jPedirInf.add(jAreaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 400, 30));

        jAreaApellido1.setToolTipText("");
        jAreaApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaApellido1KeyTyped(evt);
            }
        });
        jPedirInf.add(jAreaApellido1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 190, 30));
        jAreaApellido1.getAccessibleContext().setAccessibleName("");

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Apellidos:");
        jPedirInf.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 110, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGestiones.png"))); // NOI18N
        jPedirInf.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 730));

        add(jPedirInf, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 697));

        jPersonaExiste.setMinimumSize(new java.awt.Dimension(1080, 697));
        jPersonaExiste.setPreferredSize(new java.awt.Dimension(1080, 697));
        jPersonaExiste.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnModificarDatos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnModificarDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnModificarDatos.setToolTipText("");
        btnModificarDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarDatosMouseClicked(evt);
            }
        });
        jPersonaExiste.add(btnModificarDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, 50, 50));

        btnAsignarCentro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAsignarCentro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnAsignarCentro.setToolTipText("");
        btnAsignarCentro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAsignarCentro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAsignarCentroMouseClicked(evt);
            }
        });
        jPersonaExiste.add(btnAsignarCentro, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 50, 50));

        btnDespedir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDespedir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnDespedir.setToolTipText("");
        btnDespedir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDespedir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDespedirMouseClicked(evt);
            }
        });
        jPersonaExiste.add(btnDespedir, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 500, 50, 50));

        btnAnadirDia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAnadirDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnAnadirDia.setToolTipText("");
        btnAnadirDia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAnadirDia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAnadirDiaMouseClicked(evt);
            }
        });
        jPersonaExiste.add(btnAnadirDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 500, 50, 50));

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/calendario.png"))); // NOI18N
        jPersonaExiste.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 130, 260, 210));

        jLabel31.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        if(tipo == 1){
            jLabel31.setText("Añadir día trabajado");
        }else if(tipo == 2){
            jLabel31.setText("Añadir visita médica");
        }
        jPersonaExiste.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 350, 220, 30));

        jLabel28.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        if(tipo == 1){
            jLabel28.setText("Despedir");
        }else if(tipo == 2){
            jLabel28.setText("Dar el alta");
        }
        jPersonaExiste.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 220, 30));

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        if(tipo == 2){
            jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reporte.png")));
        }else{
            jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/despedido.png"))); // NOI18N
        }
        jPersonaExiste.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, 240, 210));

        jLabel29.setBackground(new java.awt.Color(153, 153, 255));
        jLabel29.setForeground(new java.awt.Color(153, 153, 255));
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        jLabel29.setText("jLabel2");
        jPersonaExiste.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 130, 240, 440));

        jLabel26.setBackground(new java.awt.Color(153, 153, 255));
        jLabel26.setForeground(new java.awt.Color(153, 153, 255));
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        jLabel26.setText("jLabel2");
        jPersonaExiste.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, 240, 440));

        jLabel25.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Modificar datos");
        jPersonaExiste.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 220, 30));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        jPersonaExiste.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 240, 210));

        jLabel23.setBackground(new java.awt.Color(153, 153, 255));
        jLabel23.setForeground(new java.awt.Color(153, 153, 255));
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        jLabel23.setText("jLabel2");
        jPersonaExiste.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 240, 440));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/anadir.png"))); // NOI18N
        jPersonaExiste.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 250, 210));

        jLabel22.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Asignar a un Centro");
        jPersonaExiste.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 220, 30));

        jLabel20.setBackground(new java.awt.Color(153, 153, 255));
        jLabel20.setForeground(new java.awt.Color(153, 153, 255));
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        jLabel20.setText("jLabel2");
        jPersonaExiste.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 240, 440));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGestiones.png"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(1080, 697));
        jLabel5.setMinimumSize(new java.awt.Dimension(1080, 697));
        jPersonaExiste.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, -1, 1100, 730));

        add(jPersonaExiste, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 720));

        btnNewPersona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNewPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnNewPersona.setToolTipText("");
        btnNewPersona.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewPersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewPersonaMouseClicked(evt);
            }
        });
        add(btnNewPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, 50, 50));

        jLabel17.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        if(tipo == 1){
            jLabel17.setText("Nuevo trabajador");
        }else if(tipo == 2){
            jLabel17.setText("Nuevo paciente");
        }
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 220, 30));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/anadirPers.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 270, 210));

        jLabel2.setBackground(new java.awt.Color(153, 153, 255));
        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 240, 440));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 240, 210));

        jLabel19.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        if(tipo == 1){
            jLabel19.setText("Mostrar trabajadores");
        }else if(tipo == 2){
            jLabel19.setText("Mostrar pacientes");
        }
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 250, 30));

        btnMostPers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnMostPers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton.png"))); // NOI18N
        btnMostPers.setToolTipText("");
        btnMostPers.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMostPers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMostPersMouseClicked(evt);
            }
        });
        add(btnMostPers, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 440, 50, 50));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/20220516_2240551.gif"))); // NOI18N
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 240, 440));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGestiones.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 730));

        jLabel18.setFont(new java.awt.Font("Elephant", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Nueva Persona");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 220, 30));
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Funcion del boton NewPersona, que al ser pulsado, comprobara si el dni
     * que se le indica en el JOptionPane generado existe o no. Si existe
     * mostrara el panel de PersonaExiste, en el caso de que no mostrara el
     * panel PedirInf.
     *
     * @param evt
     */
    private void btnNewPersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewPersonaMouseClicked
        limpiarCampos();
        boolean comprobar = true;
        persona = null;
        try {
            do {
                comprobar = true;
                dni = JOptionPane.showInputDialog(this, "DNI");
                dni = dni.toUpperCase();
                if (dni.equals("")) {
                    comprobar = false;
                    JOptionPane.showMessageDialog(this, "Debe introducir un DNI", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (!dni.equals("")) {
                    if (!PeticionDatos.validarNIF_NIE(dni)) {
                        comprobar = false;
                        JOptionPane.showMessageDialog(this, "DNI no valido", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    }
                }

            } while (!comprobar);
            if (Persona.existePers(gestion.getCentrosMedicos(), dni, tipo) == null && tipo == 1) {
                editar = false;
                jPedirInf.setVisible(true);
            } else if (tipo == 2 && Persona.existePers(gestion.getCentrosMedicos(), dni, 0) == null) {
                editar = false;
                jComboEspecialidad.setVisible(false);
                jRadioAdmin.setVisible(false);
                jRadioMedico.setVisible(false);
                jLabelEsp.setVisible(false);
                jLabelPuesto.setVisible(false);
                jPedirInf.setVisible(true);
            } else {
                editar = true;
                if (tipo == 1) {
                    persona = Persona.existePers(gestion.getCentrosMedicos(), dni, tipo);
                } else if (tipo == 2) {
                    persona = Persona.existePers(gestion.getCentrosMedicos(), dni, 0);
                }
                JOptionPane.showMessageDialog(this, "La persona con DNI " + persona.getDni() + " existe");
                jPersonaExiste.setVisible(true);
            }
        } catch (NullPointerException e) {
        } catch (IOException ex) {
            Logger.getLogger(GestionPersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GestionPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNewPersonaMouseClicked

    /**
     * Funcion del boton de mostrar persona que al ser pulsado, este llama a la
     * funcion mostrarPersonas
     *
     * @param evt
     */
    private void btnMostPersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostPersMouseClicked
        mostrarPersonas();
    }//GEN-LAST:event_btnMostPersMouseClicked

    /**
     * Funcion del boton de crear y editar centro que llama a la funcion validar
     * para asi poder crear o editar la persona o no.
     *
     * @param evt
     */
    private void btnAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptarMouseClicked
        validar();
    }//GEN-LAST:event_btnAceptarMouseClicked

    /**
     * Boton radio de medico que al se presionado, se le aplicaran unos
     * parametros al comboBox de Especialidad.
     *
     * @param evt
     */
    private void jRadioMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioMedicoMouseClicked
        if (jRadioMedico.isEnabled())
            jComboEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Traumatologia", "Dermatologia", "Oftalmologia", "Alergologia", "Geriatria", "Psiquiatria"}));
    }//GEN-LAST:event_jRadioMedicoMouseClicked

    /**
     * Boton radio de administrador que al se presionado, se le aplicaran unos
     * parametros al comboBox de Especialidad.
     *
     * @param evt
     */
    private void jRadioAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioAdminMouseClicked
        if (jRadioAdmin.isEnabled())
            jComboEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Urgencias", "Quirofano", "Administracion"}));
    }//GEN-LAST:event_jRadioAdminMouseClicked

    /**
     * Funcion de AreaDia que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaDiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaDiaKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaDia.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaDiaKeyTyped

    /**
     * Funcion de AreaMes que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaMesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaMesKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaMes.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaMesKeyTyped

    /**
     * Funcion de AreaAnio que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaAnioKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaAnio.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaAnioKeyTyped

    /**
     * Funcion de AreaNombre que controla que no se introduzcan numeros y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaNombreKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaNombre.getText().length() >= 25) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaNombreKeyTyped

    /**
     * Funcion de AreaApellido1 que controla que no se introduzcan numeros y no
     * se supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaApellido1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaApellido1KeyTyped
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaApellido1.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaApellido1KeyTyped

    /**
     * Funcion de AreaApellido2 que controla que no se introduzcan numeros y no
     * se supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaApellido2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaApellido2KeyTyped
        char validar = evt.getKeyChar();

        if (Character.isDigit(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaApellido2.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaApellido2KeyTyped

    /**
     * Funcion del boton de asignar una persona a un centro, que al ser
     * presionado, llamara a la funcion nuevaVentana.
     *
     * @param evt
     */
    private void btnAsignarCentroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAsignarCentroMouseClicked
        nuevaVentana(tipo, true);
    }//GEN-LAST:event_btnAsignarCentroMouseClicked

    private void btnModificarDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarDatosMouseClicked
        limpiarCampos();
        mostrarInf();
        jPedirInf.setVisible(true);
    }//GEN-LAST:event_btnModificarDatosMouseClicked

    /**
     * Funcion del botonDespedir que al presionado elimina a la persona del
     * lugar en el que se encuentra. Esta controla si la persona es un
     * trabajador o un paciente y busca donde se encuentra y lo elimina.
     *
     * @param evt
     */
    private void btnDespedirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDespedirMouseClicked
        boolean asignar = false;
        if (tipo == 1) {
            for (int x = 0; x < gestion.getCentrosMedicos().size(); x++) {
                if (persona.lugar == -1) {
                    break;
                } else {
                    gestion.getCentrosMedicos().get(x).removeTrabajador(persona);
                }
                asignar = true;
            }
        } else if (tipo == 2) {
            for (int x = 0; x < gestion.getCentrosMedicos().size(); x++) {
                for (int y = 0; y < gestion.getCentrosMedicos().get(x).getConsultas().length; y++) {
                    if (gestion.getCentrosMedicos().get(x).getConsultas()[y] == null); else if (persona.getDni().equalsIgnoreCase(gestion.getCentrosMedicos().get(x).getConsultas()[y].getDni())) {
                        if (persona.lugar == -1) {
                            break;
                        } else if (gestion.getCentrosMedicos().get(x) instanceof Hospital) {
                            ((Hospital) gestion.getCentrosMedicos().get(x)).removePaciente((Paciente) persona);
                            asignar = true;
                            break;
                        } else if (gestion.getCentrosMedicos().get(x) instanceof Clinica) {
                            try {
                                ((Clinica) gestion.getCentrosMedicos().get(x)).removePaciente((Paciente) persona);
                            } catch (IOException ex) {
                                Logger.getLogger(GestionPersona.class.getName()).log(Level.SEVERE, null, ex);
                            }

                            asignar = true;
                            break;
                        }
                    }
                }
                if (gestion.getCentrosMedicos().get(x) instanceof Hospital) {
                    for (Paciente[] habitacione : ((Hospital) gestion.getCentrosMedicos().get(x)).getHabitaciones()) {
                        for (Paciente habitacione1 : habitacione) {
                            if (persona.lugar == -1) {
                                break;
                            } else if (habitacione1 == null) {
                                ;
                            } else if (persona.getDni().equals(habitacione1.getDni())) {
                                ((Hospital) gestion.getCentrosMedicos().get(x)).removePaciente((Paciente) persona);
                                asignar = true;
                                break;
                            }
                        }
                    }
                }
            }
        }
        if (!asignar) {
            JOptionPane.showMessageDialog(this, "La persona no esta asignada en ningun lugar", "Sin Asignar", JOptionPane.WARNING_MESSAGE);
        } else if (asignar && tipo == 2) {
            JOptionPane.showMessageDialog(this, "Se le dio correctamente de baja al Paciente");
        } else if (asignar && tipo == 1) {
            JOptionPane.showMessageDialog(this, "La persona se despidio correctamente");
        }
    }//GEN-LAST:event_btnDespedirMouseClicked

    /**
     * Boton añadirDia, que al presionarlo crear un nueva ventana de pedirFecha
     * y lo muestra.
     *
     * @param evt
     */
    private void btnAnadirDiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnadirDiaMouseClicked
        JFrame ventana = new JFrame();
        pedirFecha fecha = new pedirFecha(gestion.getCentrosMedicos(), persona, tipo);

        ventana.setSize(new Dimension(325, 220));
        ventana.setMinimumSize(new Dimension(325, 220));
        ventana.setLocationRelativeTo(null);
        ventana.add(fecha);
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnAnadirDiaMouseClicked

    /**
     * Funcion validar que compruba que ningun campo este vacion en crear y
     * editar persona. Controla que los datos sean correctos.
     *
     * @param editar booleano que si es true se comprobara sabiendo que es para
     * editar, si es false se considera que se esta creando un nuevo cento.
     */
    private void validar() {
        boolean comprobar = true;
        String dia, mes, anio;
        for (Component component : jPedirInf.getComponents()) {
            if (component instanceof TextField) {
                if (((TextField) component).getText().isEmpty()) {
                    comprobar = false;
                }
            }
        }
        if (jComboGenero.getSelectedItem() == null) {
            comprobar = false;
        } else if (jComboEspecialidad.getSelectedItem() == null && tipo == 1) {
            comprobar = false;
        }
        if (!jRadioMedico.isSelected() && !jRadioAdmin.isSelected() && tipo == 1) {
            comprobar = false;
        }
        dia = jAreaDia.getText();
        dia.trim();
        mes = jAreaMes.getText();
        mes.trim();
        anio = jAreaAnio.getText();
        anio.replaceAll(" ", "");
        fecha.setFechaCompleta(Integer.parseInt(dia), Integer.parseInt(mes), Integer.parseInt(anio));
        if (tipo == 1) {
            if (!editar) {
                if (!comprobar) {
                    JOptionPane.showMessageDialog(this, "Faltan campos por rellenar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (!Medico.validarFechaNacimiento(fecha) && jRadioMedico.isSelected()) {
                    comprobar = false;
                    JOptionPane.showMessageDialog(this, "Fecha no valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (!Administrativo.validarFechaNacimiento(fecha) && jRadioAdmin.isSelected()) {
                    comprobar = false;
                    JOptionPane.showMessageDialog(this, "Fecha no valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (!Paciente.validarFechaNacimiento(fecha) && tipo == 2) {
                    comprobar = false;
                    JOptionPane.showMessageDialog(this, "Fecha no valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (comprobar) {
                    nuevaVentana(1, false);
                }
            } else if (editar) {
                if (!comprobar) {
                    JOptionPane.showMessageDialog(this, "Faltan campos por rellenar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else {
                    persona.setNombre(jAreaNombre.getText());
                    persona.setApellido1(jAreaApellido1.getText());
                    persona.setApellido2(jAreaApellido2.getText());
                    if (persona instanceof Medico) {
                        ((Medico) persona).setEspecialidad(jComboEspecialidad.getSelectedItem().toString());
                    } else if (persona instanceof Administrativo) {
                        ((Administrativo) persona).setArea(jComboEspecialidad.getSelectedItem().toString());
                    }
                }
            }
        } else if (tipo == 2) {
            if (!editar) {
                if (!comprobar) {
                    JOptionPane.showMessageDialog(this, "Faltan campos por rellenar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (!Paciente.validarFechaNacimiento(fecha)) {
                    comprobar = false;
                    JOptionPane.showMessageDialog(this, "Fecha no valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (comprobar) {
                    nuevaVentana(2, false);
                }
            } else if (editar) {
                if (!comprobar) {
                    JOptionPane.showMessageDialog(this, "Faltan campos por rellenar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else {
                    persona.setNombre(jAreaNombre.getText());
                    persona.setApellido1(jAreaApellido1.getText());
                    persona.setApellido2(jAreaApellido2.getText());
                    jPedirInf.setVisible(false);
                }
            }
        }


        /*
        if (jAreaNombre.getText().isEmpty() || jAreaApellido1.getText().isEmpty() || jAreaApellido2.getText().isEmpty() || jAreaDia.getText().isEmpty() || jAreaMes.getText().isEmpty()
                || jAreaAnio.getText().isEmpty() || !buttonGroupPuesto.isSelected()) {
            JOptionPane.showMessageDialog(this, "Faltan campos por rellenar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        }
         */
    }

    /**
     * Funcion  que aplica la informacion de una persona en los campos del
     * panel JPerdirInf
     *
     */
    public void mostrarInf() {
        String texto = "";
        jLabelNewPersona.setText("Mostrar y editar información");
        jAreaNombre.setText(persona.getNombre());
        jAreaApellido1.setText(persona.getApellido1());
        jAreaApellido2.setText(persona.getApellido2());
        jComboGenero.setSelectedItem(persona.getGenero());
        jComboGenero.setEnabled(false);
        String dia = String.valueOf(persona.getFechaNacimiento().getDia());
        jAreaDia.setText(dia);
        jAreaDia.setEditable(false);
        String mes = String.valueOf(persona.getFechaNacimiento().getMes());
        jAreaMes.setText(mes);
        jAreaMes.setEditable(false);
        String anio = String.valueOf(persona.getFechaNacimiento().getAnio());
        jAreaAnio.setText(anio);
        jAreaAnio.setEditable(false);
        if (persona instanceof Medico) {
            jRadioMedico.setSelected(true);
            jComboEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Traumatologia", "Dermatologia", "Oftalmologia", "Alergologia", "Geriatria", "Psiquiatria"}));
            //jComboEspecialidad.setToolTipText(((Medico)persona).getEspecialidad());
            jComboEspecialidad.setSelectedItem(((Medico) persona).getEspecialidad());
        } else if (persona instanceof Administrativo) {
            jRadioAdmin.setSelected(true);
            //jComboEspecialidad.setToolTipText(((Administrativo) persona).getArea());
            jComboEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Urgencias", "Quirofano", "Administracion"}));
        } else if (persona instanceof Paciente) {
            jRadioAdmin.setVisible(false);
            jRadioMedico.setVisible(false);
            jLabelEsp.setVisible(false);
            jLabelPuesto.setVisible(false);
            jComboEspecialidad.setVisible(false);
        }
        jRadioMedico.setEnabled(false);
        jRadioAdmin.setEnabled(false);
    }

    /**
     * Funcion que crea un nuevo frame y le aplica el panel de mostrarCentros.
     *
     * @param tipo entero que indica el tipo de la persona.
     * @param existe booleano que indica si la persona existe o no.
     */
    private void nuevaVentana(int tipo, boolean existe) {
        JFrame ventana = new JFrame();
        if (!existe) {
            mostrarCentros centro = new mostrarCentros(centros, gestion, false, tipo, null);
            ventana.add(centro);
        } else {
            mostrarCentros centro = new mostrarCentros(centros, gestion, true, tipo, persona);
            ventana.add(centro);
        }
        ventana.setMinimumSize(new Dimension(300, 250));
        ventana.setSize(new Dimension(450, 300));
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * Funcion que limpia todos los campos del panel JPedirInf.
     */
    private void limpiarCampos() {
        jAreaNombre.setText("");
        jAreaApellido1.setText("");
        jAreaApellido2.setText("");
        jComboGenero.setSelectedItem(null);
        jAreaDia.setText("");
        jAreaDia.setEditable(true);
        jAreaMes.setText("");
        jAreaMes.setEditable(true);
        jAreaAnio.setText("");
        jAreaAnio.setEditable(true);
        jComboEspecialidad.setVisible(true);
        jRadioAdmin.setVisible(true);
        jRadioMedico.setVisible(true);
        jLabelEsp.setVisible(true);
        jLabelPuesto.setVisible(true);
        if (jRadioMedico.isSelected()) {
            jRadioMedico.setSelected(false);
        }
        if (jRadioAdmin.isSelected()) {
            jRadioAdmin.setSelected(false);
        }
        jRadioMedico.setEnabled(true);
        jRadioAdmin.setEnabled(true);
    }

    /**
     * Funcion que muestra todas la personas (segun el tipo) en un TextArea.
     */
    private void mostrarPersonas() {
        centros = gestion.encontrarCentro(2);
        ArrayList<Persona> personas = new ArrayList();
        JFrame informacion = new JFrame();
        informacion.setSize(new Dimension(800, 350));
        TextArea area = new TextArea();
        informacion.setLocationRelativeTo(null);
        area.setEditable(false);
        informacion.add(area);
        if (tipo == 1) {
            for (int x = 0; x < centros.size(); x++) {
                for (int y = 0; y < centros.get(x).getTrabajadores().size(); y++) {
                    personas.add(centros.get(x).getTrabajadores().get(y));
                }
            }
            Collections.sort(personas);
            for (int y = 0; y < personas.size(); y++) {
                area.append(personas.get(y).toString() + "\n");
            }
        } else if (tipo == 2) {
            for (int x = 0; x < centros.size(); x++) {

                if (centros.get(x) instanceof Hospital) {
                    for (int j = 0; j < ((Hospital) centros.get(x)).getHabitaciones().length; j++) {
                        for (int y = 0; y < ((Hospital) centros.get(x)).getHabitaciones()[j].length; y++) {
                            if (((Hospital) centros.get(x)).getHabitaciones()[j][y] == null) ; else {
                                personas.add(((Hospital) centros.get(x)).getHabitaciones()[j][y]);
                            }
                        }
                    }
                }
                for (int i = 0; i < centros.get(x).getConsultas().length; i++) {
                    if (centros.get(x).getConsultas()[i] == null) ; else {
                        personas.add(centros.get(x).getConsultas()[i]);
                    }
                }
            }
            Collections.sort(personas);
            for (int y = 0; y < personas.size(); y++) {
                area.append(personas.get(y).toString() + "\n");
            }
        }
        informacion.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAceptar;
    private javax.swing.JLabel btnAnadirDia;
    private javax.swing.JLabel btnAsignarCentro;
    private javax.swing.JLabel btnDespedir;
    private javax.swing.JLabel btnModificarDatos;
    private javax.swing.JLabel btnMostPers;
    private javax.swing.JLabel btnNewPersona;
    private javax.swing.ButtonGroup buttonGroupPuesto;
    protected static javax.swing.JTextField jAreaAnio;
    protected static javax.swing.JTextField jAreaApellido1;
    protected static javax.swing.JTextField jAreaApellido2;
    protected static javax.swing.JTextField jAreaDia;
    protected static javax.swing.JTextField jAreaMes;
    protected static javax.swing.JTextField jAreaNombre;
    protected static javax.swing.JComboBox<String> jComboEspecialidad;
    protected static javax.swing.JComboBox<String> jComboGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEsp;
    private javax.swing.JLabel jLabelNewPersona;
    private javax.swing.JLabel jLabelPuesto;
    protected static javax.swing.JPanel jPedirInf;
    private javax.swing.JPanel jPersonaExiste;
    protected static javax.swing.JRadioButton jRadioAdmin;
    protected static javax.swing.JRadioButton jRadioMedico;
    // End of variables declaration//GEN-END:variables
}
