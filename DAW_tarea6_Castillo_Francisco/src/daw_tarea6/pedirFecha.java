/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package daw_tarea6;

import java.awt.Window;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import librerias.Fecha;

/**
 * Clase que se encarga de mostrar y gestionar el panel de pedirFecha.
 *
 * @author Francisco Castillo Brull
 * @version 18/05/2022
 */
public class pedirFecha extends javax.swing.JPanel {

    //Atributos
    /**
     * ArrayList de tipo Centro que guardara todos los centros pasados por
     * parametro.
     */
    private ArrayList<Centro> centro;

    /**
     * Atributo de tipo persona que contendra la persona, a la cual se le
     * añadira la nueva fecha.
     */
    private Persona persona;

    /**
     * Atributo de tipo fecha que guarda la fecha que se indique.
     */
    private Fecha fecha;

    /**
     * Atributos de tipo entero que guardaran el dia, mes y añio.
     */
    private int dia, mes, anio;

    /**
     * Atributo que indica si la persona es un Trabajador o un Paciente.
     */
    private int tipo;

    //Constructor
    public pedirFecha(ArrayList<Centro> centro, Persona persona, int tipo) {
        this.centro = centro;
        this.persona = persona;
        this.tipo = tipo;
        fecha = new Fecha();
        this.tipo = tipo;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jAreaDia = new javax.swing.JTextField();
        jAreaMes = new javax.swing.JTextField();
        jAreaAnio = new javax.swing.JTextField();
        jBtnListo = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(310, 189));
        setPreferredSize(new java.awt.Dimension(310, 189));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel4.setText("Año:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 30, -1));

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel3.setText("Mes:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 30, -1));

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setText("Día:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 30, -1));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("Introduce una fecha:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        jAreaDia.setToolTipText("");
        jAreaDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaDiaKeyTyped(evt);
            }
        });
        add(jAreaDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 50, 30));

        jAreaMes.setToolTipText("");
        jAreaMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaMesKeyTyped(evt);
            }
        });
        add(jAreaMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 50, 30));

        jAreaAnio.setToolTipText("");
        jAreaAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAreaAnioKeyTyped(evt);
            }
        });
        add(jAreaAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 50, 30));

        jBtnListo.setText("Listo");
        jBtnListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnListoActionPerformed(evt);
            }
        });
        add(jBtnListo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 90, -1));

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Funcion de AreaDia que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaDiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaDiaKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaDia.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaDiaKeyTyped

    /**
     * Funcion de AreaMes que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaMesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaMesKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaMes.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaMesKeyTyped

    /**
     * Funcion de AreaAnio que controla que no se introduzcan letras y no se
     * supere un numero de caracteres.
     *
     * @param evt
     */
    private void jAreaAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAreaAnioKeyTyped
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
        }
        if (jAreaAnio.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_jAreaAnioKeyTyped

    /**
     * Funcion que comprueba si la fecha es valida segun el tipo de persona.
     *
     * @param evt
     */
    private void jBtnListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnListoActionPerformed
        dia = Integer.parseInt(jAreaDia.getText());
        mes = Integer.parseInt(jAreaMes.getText());
        anio = Integer.parseInt(jAreaAnio.getText());
        fecha.setFechaCompleta(dia, mes, anio);
        boolean comprobar = true;
        for (int x = 0; x < centro.size(); x++) {
            if (tipo == 1) {
                for (int y = 0; y < centro.get(x).getTrabajadores().size(); y++) {
                    if (persona.getDni().equals(centro.get(x).getTrabajadores().get(y).getDni())) {
                        if (persona instanceof Medico) {
                            if (!((Medico) centro.get(x).getTrabajadores().get(y)).addDiasTrabajados(fecha)) {
                                JOptionPane.showMessageDialog(this, "La fecha no es valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                                comprobar = false;
                                break;
                            }
                        } else if (persona instanceof Administrativo) {
                            if (!((Administrativo) centro.get(x).getTrabajadores().get(y)).addDiasTrabajados(fecha)) {
                                JOptionPane.showMessageDialog(this, "La fecha no es valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                                comprobar = false;
                                break;
                            }
                        }
                    }
                }
            } else if (tipo == 2) {
                for (int y = 0; y < centro.get(x).getConsultas().length; y++) {
                    if (centro.get(x).getConsultas()[y] == null); else if (persona.getDni().equalsIgnoreCase(centro.get(x).getConsultas()[y].getDni())) {
                        if (!centro.get(x).getConsultas()[y].addVisita(fecha));
                        JOptionPane.showMessageDialog(this, "La fecha no es valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                        comprobar = false;
                        break;
                    }
                }
                if (centro.get(x) instanceof Hospital) {
                    for (int y = 0; y < ((Hospital) centro.get(x)).getHabitaciones().length; y++) {
                        for (int i = 0; i < ((Hospital) centro.get(x)).getHabitaciones()[y].length; i++) {
                            if (((Hospital) centro.get(x)).getHabitaciones()[y][i] == null); else if (persona.getDni().equals(((Hospital) centro.get(x)).getHabitaciones()[y][i].getDni())) {
                                if (!((Hospital) centro.get(x)).getHabitaciones()[y][i].addVisita(fecha)) {
                                    JOptionPane.showMessageDialog(this, "La fecha no es valida", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                                    comprobar = false;
                                    break;
                                }
                            }
                        }
                    }
                }

            }
        }
        if (comprobar) {
            JOptionPane.showMessageDialog(this, "El dia fue añadido");
            Window w = SwingUtilities.getWindowAncestor(this);
            w.dispose();
        }
    }//GEN-LAST:event_jBtnListoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAreaAnio;
    private javax.swing.JTextField jAreaDia;
    private javax.swing.JTextField jAreaMes;
    private javax.swing.JButton jBtnListo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
