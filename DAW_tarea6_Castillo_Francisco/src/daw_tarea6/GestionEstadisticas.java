/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package daw_tarea6;

import java.awt.Component;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.JRadioButton;

/**
 * Clase que se encarga de mostrar y gestionar el panel de GestionEstadisticas
 *
 * @author Francisco Castillo Brull
 * @version 18/05/2022
 */
public class GestionEstadisticas extends javax.swing.JPanel {

    //Atributos
    /**
     * Array de tipo String que contiene todos los meses del año y se aplicaran
     * al comboBox de Meses
     */
    String[] arrayMeses = new String[]{"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};

    /**
     * Atributo de tipo GestionMedica que guardara el objeto dicho.
     */
    private GestionMedica gestion;

    /**
     * Atributo de tipo entero que guarda el tipo de objeto con el que se va a
     * trabajar.
     */
    private int tipo;

    /**
     * Array de tipo JRadioButton que contendra todos los centros disponibles.
     */
    private JRadioButton[] rboton;

    /**
     * Array de tipo JRadioButton que contendra todas las personas que cumplan
     * con los requisitos.
     */
    private JRadioButton[] personas;

    /**
     * Array de tipo Persona que guardara todas las personas que cumplan con los
     * requisitos puestos.
     */
    private ArrayList<Persona> persona;

    /**
     * Atributo booleano que se usa para saber si JComboBoxMeses esta activo.
     */
    private boolean activo;

    /**
     * Atributo de tipo entero que guarda la posicion del centro seleccionado.
     */
    int y = -1;

    //Constructor
    public GestionEstadisticas(GestionMedica gestion, int tipo) {
        this.gestion = gestion;
        this.tipo = tipo;
        rboton = new JRadioButton[gestion.getCentrosMedicos().size()];
        initComponents();
        System.out.println(jComboMeses.getSelectedIndex());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotonesCentros = new javax.swing.ButtonGroup();
        grupoBotonesTipPers = new javax.swing.ButtonGroup();
        grupoBotonesPersonas = new javax.swing.ButtonGroup();
        jPanelPersonas = new javax.swing.JPanel();
        jScrollPersonas = new javax.swing.JScrollPane();
        jTextoPersonas = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelMostrar = new javax.swing.JPanel();
        jComboMeses = new javax.swing.JComboBox<>();
        jTextFieldMostInf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnMedico = new javax.swing.JRadioButton();
        btnAdmin = new javax.swing.JRadioButton();
        btnPaciente = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        grupoBotonesTipPers.add(btnMedico);
        grupoBotonesTipPers.add(btnAdmin);
        grupoBotonesTipPers.add(btnPaciente);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanelPersonasLayout = new javax.swing.GroupLayout(jPanelPersonas);
        jPanelPersonas.setLayout(jPanelPersonasLayout);
        jPanelPersonasLayout.setHorizontalGroup(
            jPanelPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );
        jPanelPersonasLayout.setVerticalGroup(
            jPanelPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );

        jPanelPersonas.setLayout(new java.awt.GridLayout(0,2,5,5));

        add(jPanelPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, 290, 90));
        if(tipo != 1){
            jPanelPersonas.setVisible(false);
        }

        jTextoPersonas.setEditable(false);
        jTextoPersonas.setColumns(20);
        jTextoPersonas.setRows(5);
        jScrollPersonas.setViewportView(jTextoPersonas);
        if(tipo != 0){
            jScrollPersonas.setVisible(false);
        }

        add(jScrollPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 450, 118));

        javax.swing.GroupLayout jPanelMostrarLayout = new javax.swing.GroupLayout(jPanelMostrar);
        jPanelMostrar.setLayout(jPanelMostrarLayout);
        jPanelMostrarLayout.setHorizontalGroup(
            jPanelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
        );
        jPanelMostrarLayout.setVerticalGroup(
            jPanelMostrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
        );

        GridLayout layout = new GridLayout(2, 0, 3, 3);
        jPanelMostrar.setLayout(layout);

        jScrollPane1.setViewportView(jPanelMostrar);
        for(int x = 0; x < gestion.getCentrosMedicos().size(); x++){
            final int f = x;
            rboton[x] = new JRadioButton(gestion.getCentrosMedicos().get(x).getNombreCentro());
            grupoBotonesCentros.add(rboton[x]);
            rboton[x].addActionListener(evt -> pulsado(f));
            jPanelMostrar.add(rboton[x]);
            rboton[x].setEnabled(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, 290, 80));

        jComboMeses.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jComboMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
            "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"}));
jComboMeses.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseExited(java.awt.event.MouseEvent evt) {
        jComboMesesMouseExited(evt);
    }
    });
    add(jComboMeses, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 160, 30));
    jComboMeses.setSelectedItem(null);
    add(jTextFieldMostInf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 670, 30));
    jTextFieldMostInf.setEditable(false);
    if(tipo != 1){
        jTextFieldMostInf.setVisible(false);
    }

    jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseExited(java.awt.event.MouseEvent evt) {
            jLabel7MouseExited(evt);
        }
    });
    add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 96, 170, 170));

    btnMedico.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    btnMedico.setForeground(new java.awt.Color(255, 255, 255));
    btnMedico.setText("Médico");
    btnMedico.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnMedicoMouseClicked(evt);
        }
    });
    add(btnMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, -1, 30));
    btnMedico.setEnabled(false);

    if(tipo != 1){
        btnMedico.setVisible(false);
    }

    btnAdmin.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    btnAdmin.setForeground(new java.awt.Color(255, 255, 255));
    btnAdmin.setText("Administrativo");
    btnAdmin.setEnabled(false);
    btnAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnAdminMouseClicked(evt);
        }
    });
    add(btnAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, -1, 30));
    if(tipo != 1){
        btnAdmin.setVisible(false);
    }

    btnPaciente.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    btnPaciente.setForeground(new java.awt.Color(255, 255, 255));
    btnPaciente.setText("Paciente");
    btnPaciente.setEnabled(false);
    btnPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            btnPacienteMouseClicked(evt);
        }
    });
    add(btnPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 290, -1, 30));
    if(tipo != 1){
        btnPaciente.setVisible(false);
    }

    jLabel2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(255, 255, 255));
    jLabel2.setText("Estadisticas de la persona seleccionada:");
    add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 460, 350, -1));
    if(tipo != 1){
        jLabel2.setVisible(false);
    }

    jLabel6.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(255, 255, 255));
    jLabel6.setText("Tipo de persona: ");
    add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 150, 30));
    if(tipo != 1){
        jLabel6.setVisible(false);
    }

    jLabel5.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(255, 255, 255));
    jLabel5.setText("Pacientes que cumplen los requisitos:");
    add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, 350, -1));
    if(tipo != 0){
        jLabel5.setVisible(false);
    }

    jLabel4.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(255, 255, 255));
    jLabel4.setText("Centros: ");
    add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 100, 30));

    jLabel3.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setText("Mes: ");
    add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 50, 30));

    jLabel1.setBackground(new java.awt.Color(204, 255, 255));
    jLabel1.setForeground(new java.awt.Color(204, 255, 255));
    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGestiones.png"))); // NOI18N
    add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-12, -8, 1100, 730));
    }// </editor-fold>//GEN-END:initComponents

    //Funciones
    /**
     * Funcion que controla que cuando el puntero salga del comboBox de meses,
     * este desactive el ComboBox y los botones de centros los active.
     *
     * @param evt
     */
    private void jComboMesesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboMesesMouseExited
        if (jComboMeses.getSelectedIndex() != -1 && !activo) {
            jComboMeses.setEnabled(false);
            activo = true;
            for (Component component : jPanelMostrar.getComponents()) {
                if (component instanceof JRadioButton) {
                    ((JRadioButton) component).setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jComboMesesMouseExited

    /**
     * Funcion del radioButton Medico, que al ser pulsado, mostrara todos las
     * personas que cumplan los requisitos con botones, en el caso de que
     * ninguna los cumpla, aplicara a el TextField MostInf, que no hay ninguna
     * persona que cumpla con los requisitos.
     *
     * @param evt
     */
    private void btnMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedicoMouseClicked
        if (btnMedico.isEnabled()) {
            persona = gestion.mostrarEstadistica(mesSelecionado(), gestion.getCentrosMedicos().get(y), 1);
            personas = new JRadioButton[persona.size()];
            crearBotonesPers(personas, persona);
            if (persona.size() == 0) {
                jTextFieldMostInf.setText("No hay ningun médico que mostrar");
            } else {
                jTextFieldMostInf.setText("");
            }
        }
    }//GEN-LAST:event_btnMedicoMouseClicked

    /**
     * Funcion del radioButton Administrativo, que al ser pulsado, mostrara
     * todos las personas que cumplan los requisitos con botones, en el caso de
     * que ninguna los cumpla, aplicara a el TextField MostInf, que no hay
     * ninguna persona que cumpla con los requisitos.
     *
     * @param evt
     */
    private void btnAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdminMouseClicked
        if (btnAdmin.isEnabled()) {
            persona = gestion.mostrarEstadistica(mesSelecionado(), gestion.getCentrosMedicos().get(y), 2);
            personas = new JRadioButton[persona.size()];
            crearBotonesPers(personas, persona);
            if (persona.size() == 0) {
                jTextFieldMostInf.setText("No hay ningun administrativo que mostrar");
            } else {
                jTextFieldMostInf.setText("");
            }
        }
    }//GEN-LAST:event_btnAdminMouseClicked

    /**
     * Funcion del radioButton Paciente, que al ser pulsado, mostrara todos las
     * personas que cumplan los requisitos con botones, en el caso de que
     * ninguna los cumpla, aplicara a el TextField MostInf, que no hay ninguna
     * persona que cumpla con los requisitos.
     *
     * @param evt
     */
    private void btnPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPacienteMouseClicked
        if (btnPaciente.isEnabled()) {
            persona = gestion.mostrarEstadistica(mesSelecionado(), gestion.getCentrosMedicos().get(y), 3);
            personas = new JRadioButton[persona.size()];
            crearBotonesPers(personas, persona);
            if (persona.size() == 0) {
                jTextFieldMostInf.setText("No hay ningun paciente que mostrar");
            } else {
                jTextFieldMostInf.setText("");
            }
        }
    }//GEN-LAST:event_btnPacienteMouseClicked

    /**
     * Funcion que controla que cuando el puntero salga del JLabel, este
     * desactive el ComboBoxMeses y los botones de centros los a active.
     *
     * @param evt
     */
    private void jLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseExited
        if (jComboMeses.getSelectedIndex() != -1 && !activo) {
            jComboMeses.setEnabled(false);
            activo = true;
            for (Component component : jPanelMostrar.getComponents()) {
                if (component instanceof JRadioButton) {
                    ((JRadioButton) component).setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jLabel7MouseExited

    /**
     * Funcion que llama internamente a la funcion de mostrarEstadisticas, la
     * cual devuelve todas las personas que cumple con los requisitos
     * establecidos y despues los añade a el TextArea de Personas. Ademas si
     * estan visibles, activara los botones de tipos de personas y desactivara
     * el los botones de los centros.
     *
     * @param f entero de la posicion en la que se encuentra el centro
     * seleccionado.
     */
    private void pulsado(int f) {
        y = f;
        ArrayList<Persona> persona = gestion.mostrarEstadistica(mesSelecionado(), gestion.getCentrosMedicos().get(f), 3);
        for (int x = 0; x < persona.size(); x++) {
            jTextoPersonas.append(persona.get(x).mostrarEstado());
        }

        for (Component component : jPanelMostrar.getComponents()) {
            if (component instanceof JRadioButton) {
                ((JRadioButton) component).setEnabled(false);
            }
        }
        btnMedico.setEnabled(true);
        btnAdmin.setEnabled(true);
        btnPaciente.setEnabled(true);
    }

    /**
     * Funcion que inicia los botones de que se pasan por parametro y los añade
     * al panel de Personas.
     *
     * @param botones array de tipo botones donde se guardaran los botones de
     * cada persona.
     * @param personas arrayList de tipo persona que contiene las personas que
     * cumple los requisitos que se establecieron
     */
    private void crearBotonesPers(JRadioButton[] botones, ArrayList<Persona> personas) {
        jPanelPersonas.removeAll();
        jPanelPersonas.revalidate();
        jPanelPersonas.repaint();
        for (int x = 0; x < persona.size(); x++) {
            final int f = x;
            botones[x] = new JRadioButton(personas.get(x).getNombre() + " " + personas.get(x).getApellido1());
            grupoBotonesPersonas.add(botones[x]);
            botones[x].addActionListener(evt -> personaPulsada(f));
            jPanelPersonas.add(botones[x]);
            jPanelPersonas.revalidate();
        }
    }

    /**
     * Funcion que aplica los datos de la persona pasada por parametro al
     * TextField de mostrar Informacion
     *
     * @param f entero que contiene en la posicion que se encuentra la persona.
     */
    private void personaPulsada(int f) {
        jTextFieldMostInf.setText(persona.get(f).mostrarEstado());
    }

    /**
     * Funcion que segun la eleccion elegida en el ComboBox de mes, pasa ese mes
     * a numero entero segun su posicion en el array de meses.
     *
     * @return devuelve el mes seleccionado en numero entero.
     */
    private int mesSelecionado() {
        System.out.println(jComboMeses.getSelectedItem());
        for (int mes = 0; mes < arrayMeses.length; mes++) {
            if (jComboMeses.getSelectedItem().equals(arrayMeses[mes])) {
                return mes + 1;
                //puedes retornar mes+1 si quieres que enero sea uno
                //pero usualmente enero se toma como cero,...
            }
        }
        return -1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnAdmin;
    private javax.swing.JRadioButton btnMedico;
    private javax.swing.JRadioButton btnPaciente;
    private javax.swing.ButtonGroup grupoBotonesCentros;
    private javax.swing.ButtonGroup grupoBotonesPersonas;
    private javax.swing.ButtonGroup grupoBotonesTipPers;
    private javax.swing.JComboBox<String> jComboMeses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanelMostrar;
    private javax.swing.JPanel jPanelPersonas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPersonas;
    private javax.swing.JTextField jTextFieldMostInf;
    private javax.swing.JTextArea jTextoPersonas;
    // End of variables declaration//GEN-END:variables
}
